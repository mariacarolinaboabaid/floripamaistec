// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ex_sem10.Context;

#nullable disable

namespace ex_sem10.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20230408162012_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("ex_sem10.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Question_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Score")
                        .HasColumnType("REAL");

                    b.Property<int>("Student_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Question_id");

                    b.HasIndex("Student_id");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discipline_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Teacher_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Teacher_id");

                    b.ToTable("Discipline", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Enunciation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quiz_id")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Quiz_id");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_close")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date_open")
                        .HasColumnType("TEXT");

                    b.Property<int>("Discipline_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Discipline_id");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Periodo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("User_id")
                        .IsUnique();

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Discipline_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Student_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Discipline_id");

                    b.HasIndex("Student_id");

                    b.ToTable("Student_Discipline", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Departament")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("User_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("User_id")
                        .IsUnique();

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ex_sem10.Models.Answer", b =>
                {
                    b.HasOne("ex_sem10.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("Question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuestionId_Answer");

                    b.HasOne("ex_sem10.Models.Student", "Student")
                        .WithMany("Answers")
                        .HasForeignKey("Student_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentId_Answer");

                    b.Navigation("Question");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ex_sem10.Models.Discipline", b =>
                {
                    b.HasOne("ex_sem10.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("Teacher_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TeacherId_Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ex_sem10.Models.Question", b =>
                {
                    b.HasOne("ex_sem10.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("Quiz_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuizId_Question");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("ex_sem10.Models.Quiz", b =>
                {
                    b.HasOne("ex_sem10.Models.Discipline", "Discipline")
                        .WithMany("Quizzes")
                        .HasForeignKey("Discipline_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DisciplineId_Quiz");

                    b.Navigation("Discipline");
                });

            modelBuilder.Entity("ex_sem10.Models.Student", b =>
                {
                    b.HasOne("ex_sem10.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("ex_sem10.Models.Student", "User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserId_Student");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ex_sem10.Models.StudentDiscipline", b =>
                {
                    b.HasOne("ex_sem10.Models.Discipline", "Discipline")
                        .WithMany("Students")
                        .HasForeignKey("Discipline_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DisciplineId");

                    b.HasOne("ex_sem10.Models.Student", "Student")
                        .WithMany("Disciplines")
                        .HasForeignKey("Student_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentId");

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ex_sem10.Models.Teacher", b =>
                {
                    b.HasOne("ex_sem10.Models.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("ex_sem10.Models.Teacher", "User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserId_Teacher");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ex_sem10.Models.Discipline", b =>
                {
                    b.Navigation("Quizzes");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("ex_sem10.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("ex_sem10.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ex_sem10.Models.Student", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("ex_sem10.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("ex_sem10.Models.User", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();

                    b.Navigation("Teacher")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
